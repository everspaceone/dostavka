"use strict";

//nav
var navBtn = document.querySelector('.nav__btn');
var navContent = document.querySelector('.nav-content');
navBtn.addEventListener('click', function () {
  navContent.classList.toggle('active');
  this.classList.toggle('active');
});

// slider

var sliderItems = document.querySelectorAll('.slider__item');
var sliderBtns = document.querySelectorAll('[data-target]');
var activeSlide = 0;
for (var i = 0; i < sliderItems.length; i++) {
  if (sliderItems[i].classList.contains('active')) {
    activeSlide = i;
  }
}
for (var _i = 0; _i < sliderBtns.length; _i++) {
  sliderBtns[_i].addEventListener('click', function (e) {
    move(e.target.getAttribute('data-target'));
  });
}
function move(btn) {
  if (btn === 'next') {
    if (activeSlide < sliderItems.length - 1) {
      activeSlide++;
    } else {
      activeSlide = 0;
    }
  } else {
    if (activeSlide > 0) {
      activeSlide--;
    } else {
      activeSlide = sliderItems.length - 1;
    }
  }
  sliderItems.forEach(function (item) {
    item.classList.remove('active');
  });
  sliderItems[activeSlide].classList.add('active');
}

// apply form

var applyStep = document.querySelectorAll('.apply-step');
var applyBlock = document.querySelectorAll('.apply-block');
var applyBtn = document.querySelectorAll('.apply-btn, .apply-next, .apply-back');
var _loop = function _loop(_i2) {
  applyBtn[_i2].addEventListener('click', function (e) {
    e.preventDefault();
    if (_i2 === 0) {
      applyStep[1].classList.add('active');
      applyBlock[0].classList.remove('active');
      applyBlock[1].classList.add('active');
    }
    if (_i2 === 1) {
      applyStep[1].classList.remove('active');
      applyBlock[0].classList.add('active');
      applyBlock[1].classList.remove('active');
    }
    if (_i2 === 2) {
      for (var _i5 = 0; _i5 < applyStep.length; _i5++) {
        applyStep[_i5].style.display = 'none';
      }
      applyBlock[2].style = 'background:transparent; padding:0;';
      applyBlock[1].classList.remove('active');
      applyBlock[2].classList.add('active');
    }
  });
};
for (var _i2 = 0; _i2 < applyBtn.length; _i2++) {
  _loop(_i2);
}

// video

var video = document.querySelector('.video-mp4');
var speedWatch = document.querySelector('.video__speed-watch');
var prevSpeed = document.querySelector('.video__prev-speed');
var nextSpeed = document.querySelector('.video__next-speed');
var prev = document.querySelector('.video__prev');
var next = document.querySelector('.video__next');
var play = document.querySelector('.video__play');
var start = document.querySelector('#start');
var end = document.querySelector('#end');
var duration = document.querySelector('.video-duration');
var line = document.querySelector('.video-line');
var volume = document.querySelector('.video-volume input');
var volumeIcon = document.querySelector('.video__volume-icon');
play.addEventListener('click', function () {
  playPause();
});
video.addEventListener('click', function () {
  playPause();
});
prevSpeed.addEventListener('click', function () {
  videoSpeed('-');
});
nextSpeed.addEventListener('click', function () {
  videoSpeed('+');
});
function playPause() {
  play.classList.toggle('active');
  if (video.paused) {
    video.play();
    endTime();
    startTime();
  } else {
    video.pause();
  }
}
function videoSpeed(symbol) {
  if (symbol === '+' && video.playbackRate < 2) {
    video.playbackRate += 0.25;
  } else if (symbol === '-' && video.playbackRate > 0) {
    video.playbackRate += -0.25;
  }
  speedWatch.style.display = 'flex';
  speedWatch.innerHTML = video.playbackRate + 'x';
  setTimeout(function () {
    speedWatch.style.display = 'none';
  }, 1500);
}
prev.addEventListener('click', function () {
  alert('no video!!!');
});
next.addEventListener('click', function () {
  alert('no video!!!');
});
function startTime() {
  setInterval(function () {
    start.innerHTML = formatTime(video.currentTime);
  }, 1000);
}
function endTime() {
  end.innerHTML = formatTime(video.duration);
}
function formatTime(num) {
  var noll = function noll(time) {
    return time < 10 ? '0' + time : time;
  };
  var hour = Math.trunc(num / 3600);
  num -= hour * 3600;
  var min = Math.trunc(num / 60);
  num -= min * 60;
  num = Math.trunc(num);
  return "".concat(noll(min), ":").concat(noll(num));
}
duration.addEventListener('click', function (e) {
  console.log(duration.clientWidth);
  var videoTime = e.offsetX / duration.clientWidth * video.duration;
  video.currentTime = videoTime;
});
video.addEventListener('timeupdate', function () {
  var lineWidth = video.currentTime / video.duration;
  line.style.width = lineWidth * 100 + '%';
});
video.addEventListener('dblclick', function () {
  video.requestFullscreen();
});
var volumeClass = ['mute', 'off', 'down', 'normal', 'up'];
video.onvolumechange = function () {
  for (var _i3 = 0; _i3 < volumeClass.length; _i3++) {
    volumeIcon.classList.remove(volumeClass[_i3]);
  }
  var volume = video.volume * 100;
  if (volume.muted) {
    volumeIcon.classList.add('mute');
  } else if (volume > 75) {
    volumeIcon.classList.add('up');
  } else if (volume > 45) {
    volumeIcon.classList.add('normal');
  } else if (volume > 15) {
    volumeIcon.classList.add('down');
  } else if (volume > 0) {
    volumeIcon.classList.add('off');
  } else if (volume == 0) {
    volumeIcon.classList.add('mute');
  }
};
volumeIcon.addEventListener('click', function () {
  video.muted ? video.muted = false : video.muted = true;
});
volume.addEventListener('click', function (e) {
  video.volume = e.target.value / 100;
});

// service slider

var serviceBlock = document.querySelector('.service__block');
var serviceBox = document.querySelectorAll('.service__box');
var serviceLeft = document.querySelector('.service__left');
var serviceRight = document.querySelector('.service__right');
serviceLeft.addEventListener('click', function () {
  serviceBlock.scrollLeft = serviceBlock.scrollLeft - 150;
});
serviceRight.addEventListener('click', function () {
  serviceBlock.scrollLeft = serviceBlock.scrollLeft + 150;
});
var serviceWidth = serviceBlock.scrollWidth - serviceBlock.clientWidth;
function serviseSlider() {
  if (serviceBlock.scrollLeft > serviceWidth - 1) {
    serviceBlock.scrollLeft -= serviceWidth;
  } else {
    serviceBlock.scrollLeft += 1;
  }
}
setInterval(function () {
  serviseSlider();
}, 15);

// accardion 

var accardionBox = document.querySelectorAll('.accardion__box');
var _loop2 = function _loop2(_i4) {
  accardionBox[_i4].addEventListener('click', function () {
    for (var j = 0; j < accardionBox.length; j++) {
      accardionBox[j].classList.remove('active');
    }
    accardionBox[_i4].classList.add('active');
  });
};
for (var _i4 = 0; _i4 < accardionBox.length; _i4++) {
  _loop2(_i4);
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
